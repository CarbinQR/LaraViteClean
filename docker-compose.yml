version: '3.7'

networks:
  pet-network:
    driver: bridge

services:
  pet-nginx:
    image: nginx:latest
    container_name: pet-nginx
    volumes:
      - ./booking:/var/www/html
      - ./docker/containers/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/containers/nginx/log:/var/log/nginx
    ports:
      - "8088:80"
      - "3030:3030"
    networks:
      - pet-network
    environment:
      TZ: Europe/Kiev
      NGINX_HOST: "pet-project"
    depends_on:
      - pet-php
      - pet-db

  pet-php:
    build:
      context: docker
      dockerfile: Dockerfile
    container_name: pet-php
    ports:
      - "9004:9000"
    networks:
      - pet-network
    volumes:
      - ./booking:/var/www/html

  pet-db:
    image: mysql:latest
    container_name: pet-db
    tty: true
    ports:
      - "3310:3306"
    volumes:
      - ./docker/containers/mysql:/var/lib/mysql
    environment:
      TZ: Europe/Kiev
      MYSQL_DATABASE: 'pet'
      MYSQL_USER: 'pet-user'
      MYSQL_ROOT_PASSWORD: 'pet-pass'
      MYSQL_PASSWORD: 'pet-pass'
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - pet-network

  pet-composer:
    build:
      context: docker
      dockerfile: Dockerfile
    container_name: pet-composer
    volumes:
      - ./booking:/var/www/html
    networks:
      - pet-network
    depends_on:
      - pet-php
    working_dir: /var/www/html
    entrypoint: [ "composer" ]

  pet-artisan:
    build:
      context: docker
      dockerfile: Dockerfile
    container_name: pet-artisan
    volumes:
      - ./booking:/var/www/html
    working_dir: /var/www/html
    entrypoint: [ "php", "/var/www/html/artisan" ]

  pet-node:
    image: node:alpine
    container_name: pet-node
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: "local"
    working_dir: /var/www/html
    volumes:
      - ./booking:/var/www/html
    command: "npm run dev"